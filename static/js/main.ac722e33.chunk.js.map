{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Cards.jsx","api/index.js","Components/Charts/Charts.jsx","Components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","Components/Charts/Charts.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","apiURLCountry","fetchData","countryName","a","dynamicURL","console","log","concat","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","Country","name","Charts","country","useState","setDailyData","useEffect","callAPI","lineChart","length","labels","datasets","label","backgroundColor","opacity","fill","width","height","options","maintainAspectRatio","barChart","legend","display","title","text","fontColor","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","countryList","customStyles","option","provided","state","isSelected","control","base","count","singleCountry","onChange","e","placeholder","App","props","res","setState","choosenCountry","this","header","designer","href","React","Component","ReactDom","render","document","getElementById"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,mOC6CpJC,EAvCD,SAAC,GAAkD,IAAD,IAAhDC,KAAMC,EAA0C,EAA1CA,UAAUC,EAAgC,EAAhCA,UAAUC,EAAsB,EAAtBA,OAAOC,EAAe,EAAfA,WAE7C,OAAIH,EAIA,yBAAKI,UAAWC,IAAOC,WACnB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAChC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOY,WACxE,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAQ,gBAAgBC,cAAY,GAAhD,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAAK,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKxB,EAAUyB,MAAOC,SAAU,EAAGC,UAAW,OAC1F,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,sCAIR,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOJ,YACxE,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAQ,gBAAgBC,cAAY,GAAhD,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAAK,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKvB,EAAUwB,MAAOC,SAAU,EAAGC,UAAW,OAC1F,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,yCAIR,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAKX,IAAOH,SACxE,kBAACgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAQ,gBAAgBC,cAAY,GAAhD,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAAK,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKtB,EAAOuB,MAAOC,SAAU,EAAGC,UAAW,OACvF,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,gCA5BT,c,yBCNTQ,EAAgB,2CAETC,EAAS,uCAAG,WAAMC,GAAN,2BAAAC,EAAA,6DACjBC,EALO,iCAMXC,QAAQC,IAAIJ,GACTA,GAA6B,UAAdA,IACdE,EAAaJ,EAAcO,OAAO,KAAKA,OAAOL,IAJ7B,SAOjBG,QAAQC,IAAIF,GAPK,SAQ0CI,IAAMC,IAAIL,GARpD,2BAQZnC,KAAMC,EARM,EAQNA,UAAUC,EARJ,EAQIA,UAAUC,EARd,EAQcA,OAAOC,EARrB,EAQqBA,WARrB,kBASV,CAACH,YAAUC,YAAUC,SAAOC,eATlB,kCAYjBgC,QAAQC,IAAI,wCAZK,0DAAH,sDAiBTI,EAAc,uCAAG,gCAAAP,EAAA,+EAEDK,IAAMC,IAtBf,wCAoBU,uBAEfxC,EAFe,EAEfA,KACD0C,EAAe1C,EAAK2C,KAAI,SAACC,GAAD,MAAc,CACxC3C,UAAU2C,EAAU3C,UAAU4C,MAC9B1C,OAAQyC,EAAUzC,OAAO0C,MACzBC,KAAOF,EAAUG,eANC,kBAQfL,GARe,yFAAH,qDAcdM,EAAc,uCAAG,8BAAAd,EAAA,+EAEWK,IAAMC,IAAIT,GAFrB,uBAETkB,EAFS,EAEfjD,KAAMiD,UAFS,kBAGfA,EAAUN,KAAI,SAACO,GAAD,OAAWA,EAAQC,SAHlB,yFAAH,qD,yBCoCZC,EApEA,SAAC,GAAgD,IAAD,IAA9CpD,KAAMC,EAAwC,EAAxCA,UAAUC,EAA8B,EAA9BA,UAAUC,EAAoB,EAApBA,OAASkD,EAAW,EAAXA,QAAW,EACzBC,mBAAS,IADgB,mBACpDV,EADoD,KACzCW,EADyC,KAE3DC,qBAAU,YACO,uCAAG,sBAAAtB,EAAA,kEACZqB,EADY,SACOd,IADP,6EAAH,qDAKbgB,KACF,IACFrB,QAAQC,IAAIgB,GAEZ,IAAMK,EACmB,IAArBd,EAAUe,OAEN,kBAAC,IAAD,CACA3D,KAAM,CACF4D,OAAQhB,EAAUD,KAAI,qBAAEG,QACxBe,SAAU,CAAC,CACP7D,KAAM4C,EAAUD,KAAI,qBAAE1C,aACtB6D,MAAO,WACPC,gBAAiB,2BACjBC,QAAQ,GACRC,MAAM,GACR,CACEjE,KAAM4C,EAAUD,KAAI,qBAAExC,UACtB2D,MAAO,SACPC,gBAAiB,2BACjBC,QAAQ,GACRC,MAAM,KAGdC,MAAO,IACPC,OAAQ,IACRC,QAAS,CAAEC,qBAAqB,KAE5B,KAGNC,EACFrE,EAEI,kBAAC,IAAD,CACID,KAAM,CACF4D,OAAO,CAAC,WAAY,YAAa,UACjCC,SAAS,CAAC,CACNC,MAAM,SACNC,gBAAgB,CAAC,yBAAyB,sBAAsB,0BAChE/D,KAAK,CAACC,EAAUyB,MAAOxB,EAAUwB,MAAOvB,EAAOuB,UAGvDwC,MAAO,IACPC,OAAQ,IACRC,QAAS,CAAEC,qBAAqB,EAC5BE,OAAQ,CAACC,SAAQ,GACjBC,MAAO,CAACD,SAAQ,EAAME,KAAK,uBAAuBrB,EAAUsB,UAAU,YAG9E,KAGR,OACI,yBAAKtE,UAAWC,IAAOC,WAClB8C,GAAmB,WAAVA,EAAqBiB,EAAWZ,I,ykBChEtD,IAgDekB,EAhDO,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,oBAAuB,EACIvB,mBAAS,IADb,mBACrCwB,EADqC,KACnBC,EADmB,KAG3CvB,qBAAU,YACQ,uCAAE,sBAAAtB,EAAA,kEACZ6C,EADY,SACc/B,IADd,6EAAF,qDAGdgC,KACF,CAACD,IAEH3C,QAAQC,IAAIyC,GAEZ,IAeIG,EAfEC,EAAe,CACjBC,OAAQ,SAACC,EAAUC,GAAX,YACHD,EADG,CAENrB,gBAAiBsB,EAAMC,WAAa,OAAS,WAC7C,UAAW,CACTvB,gBAAgB,eAGpBwB,QAAS,SAAAC,GAAI,YACNA,EADM,CAETtB,MAAO,QACPH,gBAAiB,YAKrB0B,EAAQ,EACRC,EAAc,GAOlB,OANAT,EAAcH,EAAiBnC,KAAI,SAAUU,GAGzC,OAFcqC,EAAJ,IAAVD,EAA8B,CAAC/D,MAAM,QAAQoC,MAAM,UAA2B,CAACpC,MAAM2B,EAAQS,MAAMT,GACnGoC,GAAO,EACAC,KAIP,6BACA,kBAAC,IAAD,CACIpF,OAAQ4E,EACRd,QAASa,EACTU,SAAU,SAACC,GAAD,OAAKf,EAAoBe,EAAElE,QACrCmE,YAAY,uB,iBCGTC,E,YA1CX,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KAYVlB,oBAbkB,uCAaI,WAAM5C,GAAN,eAAAC,EAAA,sEACAF,EAAUC,GADV,OACZ+D,EADY,OAElB,EAAKC,SAAS,CAACjG,KAAKgG,EAAIE,eAAejE,IACvCG,QAAQC,IAAIJ,GACZG,QAAQC,IAAI2D,GAJM,2CAbJ,sDAEd,EAAKX,MAAM,CACPrF,KAAK,GACLkG,eAAe,IAJL,E,iNASIlE,EAAU,I,OAAtBgE,E,OACNG,KAAKF,SAAS,CAACjG,KAAKgG,I,qIASf,IAAD,EAE2BG,KAAKd,MAA7BrF,EAFH,EAEGA,KAAMkG,EAFT,EAESA,eAEb,OADA9D,QAAQC,IAAIrC,GAER,6BACI,yBAAKK,UAAWC,IAAOC,WACvB,yBAAKF,UAAWC,IAAO8F,QACnB,qDAEJ,kBAAC,EAAD,CAAOpG,KAAMA,IACb,kBAAC,EAAD,CAAe6E,oBAAqBsB,KAAKtB,sBACzC,kBAAC,EAAD,CAAQ7E,KAAMA,EAAMqD,QAAS6C,KAE7B,yBAAK7F,UAAWC,IAAO+F,UACnB,4BAAI,uBAAGC,KAAK,mDAAR,+B,GApCNC,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U,mBCJhD/G,EAAOC,QAAU,CAAC,OAAS,oBAAoB,UAAY,uBAAuB,SAAW,wB,mBCA7FD,EAAOC,QAAU,CAAC,UAAY,4B","file":"static/js/main.ac722e33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3pPmh\",\"card\":\"Cards_card__ZA1yb\",\"infected\":\"Cards_infected__1kH3H\",\"recovered\":\"Cards_recovered__3FDG1\",\"deaths\":\"Cards_deaths__3TiQP\"};","import React from 'react'\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core'\r\nimport styles from './Cards.module.css'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\n\r\nconst Cards = ({data:{confirmed,recovered,deaths,lastUpdate}})=>{\r\n    //const confirmed = props.data.confirmed.value;\r\n    if(!confirmed){\r\n        return \"Loading...\"\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color = \"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\"><CountUp start={0} end={confirmed.value} duration={2} separator={','}/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Total positive cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color = \"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\"><CountUp start={0} end={recovered.value} duration={2} separator={','} /></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Total recovered cases from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n        \r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color = \"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\"><CountUp start={0} end={deaths.value} duration={2} separator={','}/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Total deaths by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios'\r\n\r\nconst apiURL = \"https://covid19.mathdro.id/api\";\r\nconst apiURLDaily = \"https://covid19.mathdro.id/api/daily\"\r\nconst apiURLCountry = \"https://covid19.mathdro.id/api/countries\"\r\n\r\nexport const fetchData = async(countryName)=>{\r\n    let dynamicURL = apiURL;\r\n    console.log(countryName);\r\n    if(countryName && countryName!==\"World\"){\r\n        dynamicURL = apiURLCountry.concat(\"/\").concat(countryName)\r\n    }\r\n    try {\r\n        console.log(dynamicURL);\r\n        let {data:{confirmed,recovered,deaths,lastUpdate}} = await axios.get(dynamicURL);\r\n        return {confirmed,recovered,deaths,lastUpdate};\r\n\r\n    } catch (error) {\r\n        console.log(\"Error fetching data from the API..!!\");\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async()=>{\r\n    try {\r\n        const {data} = await axios.get(apiURLDaily)\r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date : dailyData.reportDate\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async()=>{\r\n    try {\r\n        const {data:{countries}} = await axios.get(apiURLCountry)\r\n        return countries.map((Country)=>Country.name)\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport {fetchDailyData} from '../../api/index'\r\nimport styles from './Charts.module.css'\r\nimport {Line, Bar} from 'react-chartjs-2'\r\n\r\nconst Charts = ({data:{confirmed,recovered,deaths}, country})=>{\r\n    const [dailyData, setDailyData] = useState([]);\r\n    useEffect(()=>{\r\n        const callAPI = async()=>{\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        //console.log(dailyData);\r\n        \r\n        callAPI();\r\n    },[])\r\n    console.log(country);\r\n    \r\n    const lineChart =(\r\n        dailyData.length !== 0\r\n        ? (\r\n            <Line\r\n            data={{\r\n                labels: dailyData.map(({date})=>date),\r\n                datasets: [{\r\n                    data: dailyData.map(({confirmed})=>confirmed),\r\n                    label: 'Infected',\r\n                    backgroundColor: 'rgba(127, 127, 255, 0.3)',\r\n                    opacity:0.5,\r\n                    fill: true\r\n                },{\r\n                    data: dailyData.map(({deaths})=>deaths),\r\n                    label: 'Deaths',\r\n                    backgroundColor: 'rgba(255, 127, 127, 0.6)',\r\n                    opacity:0.5,\r\n                    fill: true\r\n                }]\r\n            }}\r\n            width={800}\r\n            height={400}\r\n            options={{ maintainAspectRatio: false }}\r\n        />\r\n            ) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar\r\n                data={{\r\n                    labels:['Infected', 'Recovered', 'Deaths'],\r\n                    datasets:[{\r\n                        label:'people',\r\n                        backgroundColor:['rgba(127, 127, 255, 1)','rgba(127,255,127,1)','rgba(255, 127, 127, 1)'],\r\n                        data:[confirmed.value, recovered.value, deaths.value]\r\n                    }]\r\n                }}\r\n                width={800}\r\n                height={400}\r\n                options={{ maintainAspectRatio: false,\r\n                    legend: {display:false},\r\n                    title: {display:true, text:\"Current scenario in \"+country , fontColor:\"white\"},\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country&&country!==\"Global\" ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts;","import React,{useState, useEffect} from 'react'\r\nimport {fetchCountries} from '../../api/index'\r\nimport Select from 'react-select'\r\n\r\nconst CountryPicker = ({handleCountryChange})=>{\r\n    const[fetchedCountries, setFetchedCountries] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI= async()=>{\r\n            setFetchedCountries(await fetchCountries())\r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n\r\n    console.log(fetchedCountries);\r\n    \r\n    const customStyles = {\r\n        option: (provided, state) => ({  //manages the options\r\n          ...provided,\r\n          backgroundColor: state.isSelected ? 'gray' : 'cornsilk',\r\n          '&:hover': {\r\n            backgroundColor:'darkgray'\r\n        }\r\n        }),\r\n        control: base => ({  //manages the select bar\r\n            ...base,\r\n            width: '300px',\r\n            backgroundColor: 'black',\r\n          })\r\n      }\r\n    \r\n    let countryList = []\r\n    let count = 0;\r\n    let singleCountry={}\r\n    countryList = fetchedCountries.map(function (country){\r\n        count === 0 ? singleCountry = {value:\"World\",label:\"Global\"}: singleCountry = {value:country,label:country}\r\n        count+=1\r\n        return singleCountry\r\n    })\r\n\r\n    return(\r\n        <div>\r\n        <Select \r\n            styles={customStyles}\r\n            options={countryList} \r\n            onChange={(e)=>handleCountryChange(e.value)}\r\n            placeholder=\"Select a country\"/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport {Cards,Charts,CountryPicker} from './Components'\r\nimport styles from './App.module.css'\r\nimport {fetchData} from './api/index'\r\n\r\nclass App extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            data:{},\r\n            choosenCountry:\"\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const res = await fetchData(\"\");\r\n        this.setState({data:res});\r\n    }\r\n\r\n    handleCountryChange = async(countryName)=>{\r\n        const res = await fetchData(countryName);\r\n        this.setState({data:res,choosenCountry:countryName});\r\n        console.log(countryName);\r\n        console.log(res);\r\n    }\r\n    render(){\r\n\r\n        const {data, choosenCountry} = this.state;\r\n        console.log(data)\r\n        return(\r\n            <div>\r\n                <div className={styles.container}>\r\n                <div className={styles.header}>\r\n                    <h3>COVID-19 Application</h3>\r\n                </div>   \r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Charts data={data} country={choosenCountry}/>\r\n                </div>\r\n                <div className={styles.designer}>\r\n                    <h6><a href=\"https://github.com/riteshzd/Covid19-Application\">designed by riteshzd</a></h6>\r\n                </div>\r\n            </div>\r\n    \r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport App from './App'\r\n\r\nReactDom.render(<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__1nAeE\",\"container\":\"App_container__1F5PA\",\"designer\":\"App_designer__apnp4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__11bhD\"};"],"sourceRoot":""}